import java.util.zip.Deflater
import java.util.zip.ZipEntry

plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'io.github.yukkuritaku.littlemaid-loom' version '1.0.3'
	id 'maven-publish'
}

littlemaidloom {
	//マイクラバージョン
	minecraftVersion("${project.minecraft_version}")
	//LittleMaidModelLoaderのバージョン
	littleMaidModelLoaderVersion("${project.littlemaid_model_loader_version}")
	//LittleMaidReBirthのバージョン
	littleMaidReBirthVersion("${project.littlemaid_rebirth_version}")
	//りーどみーファイルの指定(拡張子まで一致させる必要があるよ)
	readMeFile("LittleMaidModel_Readme.txt")

	// zip化の設定
	zipConfig {
		/*
		 * ファイル、フォルダーをntfsでzip化するか
		 * デフォルト値はtrue
		 */
		useNtfs.set(true)
		/*
		 * 圧縮レベル 0から9までのレベルを指定可能で、デフォルト値はDeflater.DEFAULT_COMPRESSION (-1)
		 * 整数でもおっけー
		 */
		compressionLevel.set(Deflater.DEFAULT_COMPRESSION)
		/*
		 * pngをzip化する時の圧縮設定
		 * 設定できる値は ZipEntry.STORED (0、無圧縮) か ZipEntry.DEFLATED (8、可逆圧縮)
		 * 整数でもおっけー
		 * デフォルト値はZipEntry.STORED (0)
		 */
		pngZipMode.set(ZipEntry.STORED)
		/*
		 * フォルダーをzip化する時の圧縮設定
		 * 設定できる値は ZipEntry.STORED (0、無圧縮) か ZipEntry.DEFLATED (8、可逆圧縮)
		 * 整数でもおっけー
		 * デフォルト値はZipEntry.STORED (0)
		 */
		folderZipMode.set(ZipEntry.STORED)
	}
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	//Cloth Config ApiとArchitectury mod
	maven {
		name = "shedaniel maven"
		url = 'https://maven.shedaniel.me/'
	}
	//ModMenu
	maven {
		name = 'terraformersmc maven'
		url = 'https://maven.terraformersmc.com/releases/'
	}
	// LittleMaidModel-Development
	maven {
		name = "jitpack"
		url = 'https://jitpack.io'
	}
	// DevAuth用、要らなかったら消してください
	maven {
		name = "djtheredstoner maven"
		url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
	}
}

loom {
	mods {
		"modid" {
			sourceSet sourceSets.main
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	// Parchment(公式)マッピング用
	/*mappings loom.layered(){
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_mappings}@zip")
	}*/

	// Fabric Loader
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Architectury
	modApi "dev.architectury:architectury-fabric:${project.architectury_version}"
	// ModMenu
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	// Cloth Config Api
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_api_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}
	// LittleMaidModelDevelopment
	modImplementation("com.github.Yukkuritaku:LittleMaidModel-Development:${project.littlemaiddevelopment_version}"){
		transitive = false
	}

	// DevAuth用、開発環境でもリアルのマイクラアカウントでログインできるライブラリです。
	// 要らなかったらこの次の行を削除してね
	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:${project.devauth_version}")

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release.set(17)
	it.options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}